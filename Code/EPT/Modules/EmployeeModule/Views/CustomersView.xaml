<UserControl x:Class="EPT.Modules.MasterDataModule.Views.CustomersView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:Behaviors="clr-namespace:EPT.GUI.Behaviors;assembly=EPT.GUI"
             xmlns:CoreControls="clr-namespace:EPT.GUI.Controls;assembly=EPT.GUI"
             xmlns:Toolkit="clr-namespace:Xceed.Wpf.Toolkit;assembly=WPFToolkit.Extended"
             xmlns:cal="http://www.caliburnproject.org"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:viewModels="clr-namespace:EPT.Modules.MasterDataModule.ViewModels"
             cal:Bind.AtDesignTime="True"
             d:DataContext="{d:DesignInstance {x:Type viewModels:CustomersViewModel},
                                              IsDesignTimeCreatable=True}"
             d:DesignHeight="300"
             d:DesignWidth="300"
             mc:Ignorable="d">
    <UserControl.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary Source="pack://application:,,,/EPT.GUI;component/Images/Images.generated.xaml" />
            </ResourceDictionary.MergedDictionaries>
        	<Style x:Key="{ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}" TargetType="{x:Type Button}">
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type Button}">
        					<Grid>
        						<Rectangle x:Name="Border" Fill="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" SnapsToDevicePixels="True"/>
        						<Polygon x:Name="Arrow" Fill="Black" HorizontalAlignment="Right" Margin="8,8,3,3" Opacity="0.15" Points="0,10 10,10 10,0" Stretch="Uniform" VerticalAlignment="Bottom"/>
        					</Grid>
        					<ControlTemplate.Triggers>
        						<Trigger Property="IsMouseOver" Value="True">
        							<Setter Property="Stroke" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        						</Trigger>
        						<Trigger Property="IsPressed" Value="True">
        							<Setter Property="Fill" TargetName="Border" Value="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"/>
        						</Trigger>
        						<Trigger Property="IsEnabled" Value="False">
        							<Setter Property="Visibility" TargetName="Arrow" Value="Collapsed"/>
        						</Trigger>
        					</ControlTemplate.Triggers>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        	</Style>
        	<Style x:Key="DataGridStyle1" TargetType="{x:Type DataGrid}">
        		<Setter Property="Background" Value="{DynamicResource {x:Static SystemColors.ControlBrushKey}}"/>
        		<Setter Property="Foreground" Value="{DynamicResource {x:Static SystemColors.ControlTextBrushKey}}"/>
        		<Setter Property="BorderBrush" Value="#FF688CAF"/>
        		<Setter Property="BorderThickness" Value="1"/>
        		<Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected"/>
        		<Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        		<Setter Property="ScrollViewer.PanningMode" Value="Both"/>
        		<Setter Property="Stylus.IsFlicksEnabled" Value="False"/>
        		<Setter Property="Template">
        			<Setter.Value>
        				<ControlTemplate TargetType="{x:Type DataGrid}">
        					<Border BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" Padding="{TemplateBinding Padding}" SnapsToDevicePixels="True">
        						<ScrollViewer x:Name="DG_ScrollViewer" Focusable="false">
        							<ScrollViewer.Template>
        								<ControlTemplate TargetType="{x:Type ScrollViewer}">
        									<Grid>
        										<Grid.ColumnDefinitions>
        											<ColumnDefinition Width="Auto"/>
        											<ColumnDefinition Width="*"/>
        											<ColumnDefinition Width="Auto"/>
        										</Grid.ColumnDefinitions>
        										<Grid.RowDefinitions>
        											<RowDefinition Height="Auto"/>
        											<RowDefinition Height="*"/>
        											<RowDefinition Height="Auto"/>
        										</Grid.RowDefinitions>
        										<Button Command="{x:Static DataGrid.SelectAllCommand}" Focusable="false" Style="{DynamicResource {ComponentResourceKey ResourceId=DataGridSelectAllButtonStyle, TypeInTargetAssembly={x:Type DataGrid}}}" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.All}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}" Width="{Binding CellsPanelHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        										<DataGridColumnHeadersPresenter x:Name="PART_ColumnHeadersPresenter" Grid.Column="1" Visibility="{Binding HeadersVisibility, ConverterParameter={x:Static DataGridHeadersVisibility.Column}, Converter={x:Static DataGrid.HeadersVisibilityConverter}, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        										<ScrollContentPresenter x:Name="PART_ScrollContentPresenter" CanContentScroll="{TemplateBinding CanContentScroll}" Grid.ColumnSpan="2" Grid.Row="1"/>
        										<ScrollBar x:Name="PART_VerticalScrollBar" Grid.Column="2" Maximum="{TemplateBinding ScrollableHeight}" Orientation="Vertical" Grid.Row="1" Visibility="{TemplateBinding ComputedVerticalScrollBarVisibility}" Value="{Binding VerticalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportHeight}"/>
        										<Grid Grid.Column="1" Grid.Row="2">
        											<Grid.ColumnDefinitions>
        												<ColumnDefinition Width="{Binding NonFrozenColumnsViewportHorizontalOffset, RelativeSource={RelativeSource AncestorType={x:Type DataGrid}}}"/>
        												<ColumnDefinition Width="*"/>
        											</Grid.ColumnDefinitions>
        											<ScrollBar x:Name="PART_HorizontalScrollBar" Grid.Column="1" Maximum="{TemplateBinding ScrollableWidth}" Orientation="Horizontal" Visibility="{TemplateBinding ComputedHorizontalScrollBarVisibility}" Value="{Binding HorizontalOffset, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" ViewportSize="{TemplateBinding ViewportWidth}"/>
        										</Grid>
        									</Grid>
        								</ControlTemplate>
        							</ScrollViewer.Template>
        							<ItemsPresenter SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}"/>
        						</ScrollViewer>
        					</Border>
        				</ControlTemplate>
        			</Setter.Value>
        		</Setter>
        		<Style.Triggers>
        			<MultiTrigger>
        				<MultiTrigger.Conditions>
        					<Condition Property="IsGrouping" Value="true"/>
        					<Condition Property="VirtualizingPanel.IsVirtualizingWhenGrouping" Value="false"/>
        				</MultiTrigger.Conditions>
        				<Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
        			</MultiTrigger>
        		</Style.Triggers>
        	</Style>
            <!--
                <Style x:Key="DataGridStyle" TargetType="{x:Type DataGrid}">
                <Setter Property="RowDetailsVisibilityMode" Value="VisibleWhenSelected" />
                <Setter Property="GridLinesVisibility" Value="Horizontal" />
                <Setter Property="AlternationCount" Value="1" />
                <Setter Property="HorizontalGridLinesBrush" Value="#FFA0A0A0" />
                <Setter Property="AlternatingRowBackground" Value="#FFBABABA" />
                <Setter Property="SelectionMode" Value="Single" />
                </Style>
            -->
        </ResourceDictionary>
    </UserControl.Resources>
    <Toolkit:BusyIndicator IsBusy="{Binding BusyWatcher.IsBusy}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="54" />
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="1*" />
                <RowDefinition Height="5" />
                <RowDefinition Height="1*" />
            </Grid.RowDefinitions>
            <CoreControls:SearchTextBox Grid.ColumnSpan="2"
                                        MinWidth="220"
                                        Margin="5"
                                        HorizontalAlignment="Left"
                                        VerticalAlignment="Top"
                                        LabelText="Search for customer name"
                                        SearchMode="Delayed"
                                        Text="{Binding CustomerSearchText,
                                                       UpdateSourceTrigger=PropertyChanged}"
                                        cal:Message.Attach="[Event Search] = [Action Search]">
                <i:Interaction.Behaviors>
                    <Behaviors:InitialFocusBehavior />
                </i:Interaction.Behaviors>
            </CoreControls:SearchTextBox>

            <DataGrid x:Name="Customers"
                      Grid.Row="1"
                      Margin="5"
                      EnableRowVirtualization="True" Style="{DynamicResource DataGridStyle1}" AlternatingRowBackground="#FFA4A4A4" AlternationCount="1" SelectionMode="Single" GridLinesVisibility="Horizontal" AutoGenerateColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Width="SizeToHeader"
                                        Binding="{Binding City}"
                                        Header="City" />
                    <DataGridTextColumn Width="SizeToHeader"
                                        Binding="{Binding CompanyName}"
                                        Header="Company Name" />
                    <DataGridTextColumn Binding="{Binding ContactName}" Header="Contact Name" />
                    <DataGridTextColumn Binding="{Binding Country}" Header="Country" />
                    <DataGridTextColumn Binding="{Binding Fax}" Header="Fax" />
                    <DataGridTextColumn Binding="{Binding Phone}" Header="Phone" />
                    <DataGridTextColumn Binding="{Binding PostalCode}" Header="Postal Code" />
                    <DataGridTextColumn Binding="{Binding Region}" Header="Region" />
                </DataGrid.Columns>
            </DataGrid>

            <GridSplitter Grid.RowSpan="2" Grid.Column="1" />

            <ContentControl x:Name="ActiveItem"
                            Grid.Row="3"
                            Grid.ColumnSpan="2"
                            Margin="5" />

            <Button Grid.Row="1"
                    Grid.Column="1"
                    Width="44"
                    Margin="5,0,5,0"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Top"
                    cal:Message.Attach="[Event Click] = [Action EditCustomer]">
                <StackPanel>
                    <Image Width="32" Source="{DynamicResource ImgSrc_light_appbar.edit}" />
                </StackPanel>
            </Button>

        </Grid>
    </Toolkit:BusyIndicator>
</UserControl>
